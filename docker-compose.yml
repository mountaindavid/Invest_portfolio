services:
  backend:
    build: ./backend
    ports:
      - "5001:5000"
    env_file: .env
    environment:
      - DATABASE_URL=mysql+pymysql://user:testpass@db:3306/invest_portfolio
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - mysql
      - redis
#      - kafka
#  frontend:
#    build: ./frontend
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend
#  worker:
#    build: ./worker
#    environment:
#      - KAFKA_BROKER=kafka:9092
#    depends_on:
#      - kafka
#  ai:
#    build: ./ai
#    depends_on:
#      - backend
  mysql:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: invest_portfolio
      MYSQL_USER: user
      MYSQL_PASSWORD: testpass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d  # auto init
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6.2
#  kafka:
#    image: confluentinc/cp-kafka:7.0.1
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    depends_on:
#      - zookeeper
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#  prometheus:
#    image: prom/prometheus
#    volumes:
#      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3001:3000"
volumes:
  mysql_data: